@page "/login"
@using MudBlazor
@using NguyenTuanK55.Models
@inject NavigationManager Navigation
@inject AuthService AuthService

<style>
    .video-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        overflow: hidden;
    }

        .video-background video {
            min-width: 100%;
            min-height: 100%;
            width: auto;
            height: auto;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-size: cover;
        }

    body {
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        background-color: #f4f5f7;
        /*background-image: url('/images/ssglx.jpg');*/
    }

    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
       /*background-image: url('/images/ssglx.jpg'); /* Replace with your background image */
        background-size: cover;
        background-position: center;
    }

    .login-card {
        width: 100%;
        max-width: 400px;
        padding: 2rem;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        border-radius: 10px;
        background-color: rgba(224, 255, 255, 0.75);
    }

    .login-card .card-body {
        padding: 1rem;
    }

    .login-card .card-title {
        margin-bottom: 1.5rem;
        font-size: 1.75rem;
        text-align: center;
        color: #343a40;
    }

    .form-group {
        margin-bottom: 1.5rem;
    }

    .form-control {
        border-radius: 5px;
        border: 1px solid #ced4da;
        padding: 0.75rem;
        font-size: 1rem;
    }

    .btn-primary {
        background-color: #28a745;
        border-color: #28a745;
        width: 100%;
        transition: background-color 0.3s ease, border-color 0.3s ease;
        font-size: 1rem;
        padding: 0.75rem;
        border-radius: 5px;
    }

    .btn-primary:hover {
        background-color: #218838;
        border-color: #1e7e34;
    }

    .btn-secondary {
        background-color: #6c757d;
        border-color: #6c757d;
        width: 100%;
        margin-top: 10px;
        transition: background-color 0.3s ease, border-color 0.3s ease;
        font-size: 1rem;
        padding: 0.75rem;
        border-radius: 5px;
    }

    .btn-secondary:hover {
        background-color: #5a6268;
        border-color: #545b62;
    }

    .alert-danger {
        margin-top: 1rem;
        font-size: 0.875rem;
        text-align: center;
    }
</style>

<div class="video-background">
    <video autoplay loop muted playsinline>
        <source src="videos/480p.mp4" type="video/mp4">
        Your browser does not support the video tag.
    </video>
</div>

<div class="login-container">
    <div class="card login-card">
        <div class="card-body">
            <h3 class="card-title">Đăng nhập - Admin</h3>
            <EditForm Model="@user" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" />

                <div class="form-group">
                    <label for="username">Email</label>
                    <InputText id="username" class="form-control" @bind-Value="user.Username" />
                </div>
                <div class="form-group">
                    <label for="password">Mật khẩu</label>
                    <InputText id="password" type="password" class="form-control" @bind-Value="user.Password" />
                </div>

                <button type="submit" class="btn btn-primary">Đăng nhập</button>
                <button type="button" class="btn btn-secondary" @onclick="Cancel">Trở về</button>
            </EditForm>

            @if (!string.IsNullOrEmpty(ErrorMessage))
            {
                <div class="alert alert-danger">@ErrorMessage</div>
            }
        </div>
    </div>
</div>

@code {
    private UserLoginModel user = new UserLoginModel();
    private string ErrorMessage;

    private async Task HandleValidSubmit()
    {
        try
        {
            await AuthService.Login(user);
            Navigation.NavigateTo("/dashboard");
        }
        catch (Exception ex)
        {
            ErrorMessage = $"An error occurred: {ex.Message}";
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/");
    }
}
