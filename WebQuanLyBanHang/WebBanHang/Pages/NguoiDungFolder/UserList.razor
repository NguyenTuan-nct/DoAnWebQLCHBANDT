@page "/nguoidung-list"
@* @using NguyenTuanK55.Models *@
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@inject AuthService AuthService
@inject Microsoft.JSInterop.IJSRuntime JSRuntime
<AuthRedirect />

<h1 class="text-center my-4">Danh Sách Người Quản Trị</h1>

<div class="video-background">
    <video autoplay loop muted playsinline>
        <source src="videos/smartcity.mp4" type="video/mp4">
        Your browser does not support the video tag.
    </video>
</div>

@if (AuthService.GetUserCap() < 5)
{
    <button class="btn btn-success mb-3" @onclick="CreateUser"><i class="fas fa-plus"></i> Thêm </button>
}

@if (isLoading)
{
    <p>Loading...</p>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-dark-borders">
            <thead class="thead-dark">
                <tr>
                    <th class="text-center">Họ Tên</th>
                    <th class="text-center">Ngày Sinh</th>
                    <th class="text-center">Giới Tính</th>
                    <th class="text-center">Địa Chỉ</th>
                    <th class="text-center">Điện Thoại</th>
                    <th class="text-center">Email</th>
                    <th class="quantri-text">Cấp Quản Trị</th>
                    <th class="text-center">Hành Động</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var nguoiDung in NguoiDungs)
                {
                    <tr>
                        <td>@nguoiDung.HoTen</td>
                        <td class="text-center">@nguoiDung.NgaySinh.ToShortDateString()</td>
                        <td>@(nguoiDung.GioiTinh ? "Nam" : "Nữ")</td>
                        <td>@nguoiDung.DiaChi</td>
                        <td>@nguoiDung.DienThoai</td>
                        <td>@nguoiDung.Email</td>
                        <td class="text-center">@nguoiDung.Cap</td>
                        <td class="text-center">
                            <button class="btn btn-sm btn-primary mr-1" @onclick="() => EditUser(nguoiDung.NguoiDungId)">Xem</button>
                            @if (AuthService.GetUserCap() == 1 || (AuthService.GetUserCap() < nguoiDung.Cap && AuthService.GetUserCap() < 5))
                            {
                                <button class="btn btn-sm btn-danger" @onclick="() => ConfirmDelete(nguoiDung.NguoiDungId)">Xóa</button>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {
    private List<NguoiDung> NguoiDungs;
    private bool isLoading = true;

    protected override async Task OnInitializedAsync()
    {
        NguoiDungs = await DbContext.NguoiDungs.OrderBy(nguoiDung => nguoiDung.Cap).ToListAsync();
        isLoading = false;
    }

    private void CreateUser()
    {
        Navigation.NavigateTo("/add-nguoidung");
    }

    private void EditUser(int nguoiDungId)
    {
        Navigation.NavigateTo($"/edit-nguoidung/{nguoiDungId}");
    }

    private async Task ConfirmDelete(int nguoiDungId)
    {
        if (await JSRuntime.InvokeAsync<bool>("confirm", "Bạn có chắc chắn muốn xóa người dùng này không?"))
        {
            var nguoiDung = await DbContext.NguoiDungs.FindAsync(nguoiDungId);
            if (nguoiDung != null)
            {
                DbContext.NguoiDungs.Remove(nguoiDung);
                await DbContext.SaveChangesAsync();
                NguoiDungs.Remove(nguoiDung);
            }
        }
    }
}

<style>
    h1.my-4::after {
        content: '';
        display: block;
        width: 200px;
        height: 4px;
        background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(9,9,121,1) 35%, rgba(0,212,255,1) 100%);
        margin: 10px auto 0;
        border-radius: 2px;
    }

    h1 {
        margin-bottom: 30px;
    }

        h1.my-4 {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

    .video-background {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        overflow: hidden;
    }

        .video-background video {
            min-width: 100%;
            min-height: 100%;
            width: auto;
            height: auto;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-size: cover;
            filter: blur(4px);
        }

    .btn-primary {
        border-radius: 5px;
    }

    .btn-danger {
        border-radius: 5px;
    }

    .table-responsive {
        margin-top: 20px;
    }

    .table {
        border-radius: 5px;
        overflow: hidden;
        border-collapse: separate;
        border-spacing: 0;
    }

    .thead-dark th {
        background-color: #009879;
        color: white;
        border-color: black !important;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(245, 255, 250, 0.9);
    }

    .table-striped tbody tr:nth-of-type(even) {
        background-color: rgba(245, 255, 250, 0.9);
    }

    .table-bordered {
        border: 1px solid black;
    }

        .table-bordered th,
        .table-bordered td {
            border: 1px solid black !important;
        }

    .table tbody tr:hover {
        background-color: rgba(255, 255, 204, 0.9);
        cursor: pointer;
    }

    .table-middle {
        vertical-align: middle !important;
    }

    .text-center {
        text-align: center;
    }

    .mr-1 {
        margin-right: 5px;
    }

    .quantri-text {
        text-align: center;
    }
</style>