@page "/view-sanpham/{SanPhamId:int}"
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@inject IWebHostEnvironment Env
@inject IJSRuntime JS
<AuthRedirect />
<h1 class="text-center my-4">Xem Sản Phẩm</h1>

<div class="container">
    <div class="card shadow-sm mb-3">
        <div class="card-body">
            @if (isLoading)
            {
                <p>Loading...</p>
            }
            else if (SanPham == null)
            {
                <p>Sản phẩm không tồn tại.</p>
            }
            else
            {
                <div class="text-center mb-4">
                    <img src="@SanPham.Anh" alt="Ảnh sản phẩm" class="img-thumbnail product-image" />
                </div>
                <EditForm Model="@SanPham" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" />

                    <div class="form-group">
                        <label for="tenSanPham">Tên Sản Phẩm</label>
                        <InputText id="tenSanPham" class="form-control" @bind-Value="SanPham.TenSanPham" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="loaiSanPham">Loại Sản Phẩm</label>
                        <InputText id="loaiSanPham" class="form-control" @bind-Value="SanPham.LoaiSanPham" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="giaSanPham">Giá Sản Phẩm</label>
                        <InputNumber id="giaSanPham" class="form-control" @bind-Value="SanPham.GiaSanPham" />
                    </div>

                    <div class="form-group mt-3">
                        <label>Chọn phương thức nhập ảnh</label>
                        <div class="form-check form-switch">
                            <input class="form-check-input" type="checkbox" id="imageToggle" @bind="IsUrlInput" />
                            <label class="form-check-label" for="imageToggle">@(IsUrlInput ? "Nhập link ảnh" : "Tải lên tập tin")</label>
                        </div>
                    </div>

                    @if (!IsUrlInput)
                    {
                        <div class="form-group mt-3">
                            <label for="anh">Ảnh Sản Phẩm</label>
                            <InputFile id="anh" OnChange="HandleFileSelected" class="form-control" />
                        </div>
                    }
                    else
                    {
                        <div class="form-group mt-3">
                            <label for="anhUrl">Link Ảnh Sản Phẩm</label>
                            <InputText id="anhUrl" class="form-control" @bind-Value="ImageUrl" />
                        </div>
                    }

                    <div class="form-group mt-3">
                        <label for="ngayNhap">Ngày Nhập</label>
                        <InputDate id="ngayNhap" class="form-control" @bind-Value="SanPham.NgayNhap" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="tonKho">Tồn Kho</label>
                        <InputNumber id="tonKho" class="form-control" @bind-Value="SanPham.TonKho" />
                    </div>
                    <div class="form-group my-3">
                        <label for="moTa">Mô Tả</label>
                        <InputTextArea id="moTa" class="form-control" @bind-Value="SanPham.MoTa" />
                    </div>

                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-primary">Cập Nhật</button>
                        <button type="button" class="btn btn-secondary" @onclick="Cancel">Trở Về</button>
                    </div>
                </EditForm>
            }
        </div>
    </div>
</div>

@code {
    [Parameter] public int SanPhamId { get; set; }
    private SanPham SanPham;
    private bool isLoading = true;
    private string existingImagePath;
    private IBrowserFile tempFile;
    private bool IsUrlInput { get; set; } = false;
    private string ImageUrl { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        SanPham = await DbContext.SanPhams.FindAsync(SanPhamId);
        if (SanPham != null)
        {
            existingImagePath = SanPham.Anh;
        }
        isLoading = false;
    }

    private void HandleFileSelected(InputFileChangeEventArgs e)
    {
        tempFile = e.File;
        ImageUrl = null; // Reset the link if a file is selected
    }

    private async Task HandleValidSubmit()
    {
        if (tempFile != null)
        {
            var extension = Path.GetExtension(tempFile.Name);
            var fileName = $"{Guid.NewGuid()}{extension}";
            var filePath = Path.Combine(Env.WebRootPath, "images", fileName);

            using (var fileStream = new FileStream(filePath, FileMode.Create))
            {
                await tempFile.OpenReadStream().CopyToAsync(fileStream);
            }

            SanPham.Anh = $"/images/{fileName}";

            // Delete the old image file if a new one is selected
            if (!string.IsNullOrEmpty(existingImagePath))
            {
                var oldFilePath = Path.Combine(Env.WebRootPath, existingImagePath.TrimStart('/'));
                if (System.IO.File.Exists(oldFilePath))
                {
                    System.IO.File.Delete(oldFilePath);
                }
            }
        }
        else if (IsUrlInput && !string.IsNullOrEmpty(ImageUrl))
        {
            SanPham.Anh = ImageUrl;
        }
        else
        {
            // If no new file or URL is selected, keep the existing image path
            SanPham.Anh = existingImagePath;
        }

        DbContext.SanPhams.Update(SanPham);
        await DbContext.SaveChangesAsync();
        Navigation.NavigateTo("/sanpham-list");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/sanpham-list");
    }
}

<style>
    h1 {
        margin-bottom: 30px;
    }

    .container {
        max-width: 800px;
    }

    .card {
        border-radius: 10px;
    }

    .card-body {
        padding: 30px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-check-input {
        margin-left: 0;
        margin-right: 10px;
    }

    .btn-primary {
        border-radius: 5px;
    }

    .btn-secondary {
        border-radius: 5px;
    }

    .form-control {
        border-radius: 5px;
    }

    .form-check-label {
        margin-left: 5px;
    }

    .d-flex {
        margin-top: 20px;
    }

    .product-image {
        max-width: 300px;
        border-radius: 10px;
    }
</style>
