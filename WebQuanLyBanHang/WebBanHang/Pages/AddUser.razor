@page "/add-nguoidung"
@using NguyenTuanK55.Models
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@inject AuthService AuthService
<AuthRedirect />

<h1 class="text-center my-4">Thêm Người Dùng</h1>

<div class="container">
    <div class="card shadow-sm mb-3">
        <div class="card-body">
            @if (AuthService.GetUserCap() < 5)
            {
                <EditForm Model="@NguoiDung" OnValidSubmit="HandleValidSubmit">
                    <DataAnnotationsValidator />
                    <ValidationSummary class="text-danger" />

                    <div class="form-group">
                        <label for="hoTen">Họ Tên</label>
                        <InputText id="hoTen" class="form-control" @bind-Value="NguoiDung.HoTen" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="ngaySinh">Ngày Sinh</label>
                        <InputDate id="ngaySinh" class="form-control" @bind-Value="NguoiDung.NgaySinh" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="gioiTinh">Giới Tính</label>
                        <InputSelect id="gioiTinh" class="form-control" @bind-Value="NguoiDung.GioiTinh">
                            <option value="true">Nam</option>
                            <option value="false">Nữ</option>
                        </InputSelect>
                    </div>
                    <div class="form-group mt-3">
                        <label for="diaChi">Địa Chỉ</label>
                        <InputText id="diaChi" class="form-control" @bind-Value="NguoiDung.DiaChi" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="dienThoai">Điện Thoại</label>
                        <InputText id="dienThoai" class="form-control" @bind-Value="NguoiDung.DienThoai" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="email">Email</label>
                        <InputText id="email" class="form-control" @bind-Value="NguoiDung.Email" />
                    </div>
                    <div class="form-group mb-3 mt-3">
                        <label for="matKhau">Mật Khẩu</label>
                        <InputText id="matKhau" class="form-control" @bind-Value="NguoiDung.MatKhau" type="password" />
                    </div>
                    <div class="form-group mt-3">
                        <label for="cap">Cấp</label>
                        <InputSelect id="cap" class="form-control" @bind-Value="NguoiDung.Cap">
                            <option value="1">1 - Chủ Cửa Hàng</option>
                            <option value="2">2 - Quản Lý Cửa Hàng</option>
                            <option value="3">3 - Quản Lý Bán Hàng</option>
                            <option value="4">4 - Quản Lý Kho Hàng</option>
                            <option value="5">5 - Nhân Viên Kho Hàng</option>
                        </InputSelect>
                    </div>

                    <div class="text-danger">@errorMessage</div>

                    <div class="d-flex justify-content-between">
                        <button type="submit" class="btn btn-primary">Lưu</button>
                        <button type="button" class="btn btn-secondary" @onclick="Cancel">Hủy</button>
                    </div>
                </EditForm>
            }
            else
            {
                <p class="text-danger">Bạn không có quyền thêm người dùng.</p>
            }
        </div>
    </div>
</div>

@code {
    private NguoiDung NguoiDung = new NguoiDung { NgaySinh = DateTime.Today };
    private string errorMessage;

    private async Task HandleValidSubmit()
    {
        errorMessage = string.Empty;

        // Get the current user's level
        var currentUserCap = AuthService.GetUserCap();

        if (NguoiDung.Cap <= currentUserCap && currentUserCap != 1)
        {
            errorMessage = "Bạn không có quyền thêm người dùng với cấp cao hơn hoặc bằng bạn.";
        }
        else
        {
            try
            {
                DbContext.NguoiDungs.Add(NguoiDung);
                await DbContext.SaveChangesAsync();
                Navigation.NavigateTo("/nguoidung-list");
            }
            catch (Exception ex)
            {
                // Handle the exception (e.g., log it and show an error message to the user)
                Console.Error.WriteLine(ex);
                errorMessage = "Đã xảy ra lỗi khi thêm người dùng.";
            }
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/nguoidung-list");
    }
}

<style>
    h1 {
        margin-bottom: 30px;
    }

    .container {
        max-width: 800px;
    }

    .card {
        border-radius: 10px;
    }

    .card-body {
        padding: 30px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-check-input {
        margin-left: 0;
        margin-right: 10px;
    }

    .btn-primary {
        border-radius: 5px;
    }

    .btn-secondary {
        border-radius: 5px;
    }

    .form-control {
        border-radius: 5px;
    }

    .form-check-label {
        margin-left: 5px;
    }

    .d-flex {
        margin-top: 20px;
    }

    .text-danger {
        color: red;
        margin-top: 10px;
    }
</style>
