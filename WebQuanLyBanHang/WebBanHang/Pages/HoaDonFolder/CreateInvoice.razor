@page "/create-hoa-don"
@* @using NguyenTuanK55.Models *@
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@inject AuthService AuthService
<AuthRedirect />

<h1 class="text-center my-4">Lập Hóa Đơn</h1>

<div class="container">
    <div class="card shadow-sm mb-3">
        <div class="card-body">
            <EditForm Model="@HoaDon" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" />

                <div class="form-group">
                    <label for="khachHangId">Khách Hàng</label>
                    <InputSelect id="khachHangId" class="form-control" @bind-Value="HoaDon.KhachHangId">
                        <option value="">Chọn khách hàng</option>
                        @if (KhachHangs != null)
                        {
                            @foreach (var khachHang in KhachHangs)
                            {
                                <option value="@khachHang.KhachHangId">@khachHang.TenKhachHang</option>
                            }
                        }
                    </InputSelect>
                </div>
                <div class="form-group mt-3">
                    <label for="ngayLap">Ngày Lập</label>
                    <InputDate id="ngayLap" class="form-control" @bind-Value="HoaDon.NgayLap" />
                </div>

                <h4 class="mt-5 text-center text-uppercase">Thêm Sản Phẩm</h4>
                <div class="form-group mt-3">
                    <label for="sanPhamId">Sản Phẩm</label>
                    <InputSelect id="sanPhamId" class="form-control" @bind-Value="SelectedSanPhamId">
                        <option value="">Chọn sản phẩm</option>
                        @if (SanPhams != null)
                        {
                            @foreach (var sanPham in SanPhams)
                            {
                                <option value="@sanPham.SanPhamId">@sanPham.TenSanPham</option>
                            }
                        }
                    </InputSelect>
                </div>
                <div class="form-group mt-3 mb-3">
                    <label for="soLuong">Số Lượng</label>
                    <InputNumber id="soLuong" class="form-control" @bind-Value="SoLuong" />
                </div>
                <button type="button" class="btn btn-primary mb-3" @onclick="AddProduct">Thêm Sản Phẩm</button>

                @if (!string.IsNullOrEmpty(ErrorMessage))
                {
                    <div class="alert alert-danger">@ErrorMessage</div>
                }

                <h4 class="text-center mt-5 text-uppercase">Chi Tiết Sản Phẩm</h4>
                <table class="table table-striped table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>Tên Sản Phẩm</th>
                            <th>Số Lượng</th>
                            <th>Giá</th>
                            <th>Tổng</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ChiTietHoaDons != null)
                        {
                            @foreach (var chiTiet in ChiTietHoaDons)
                            {
                                <tr>
                                    <td>@chiTiet.SanPham.TenSanPham</td>
                                    <td>@chiTiet.SoLuong</td>
                                    <td>@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", chiTiet.Gia)</td>
                                    <td>@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", chiTiet.SoLuong * chiTiet.Gia)</td>
                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="3" class="text-right"><strong>Tổng Cộng:</strong></td>
                            <td><strong>@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", ChiTietHoaDons.Sum(c => c.SoLuong * c.Gia))</strong></td>
                        </tr>
                    </tfoot>
                </table>

                <div class="d-flex justify-content-between mt-4">
                    <button type="submit" class="btn btn-primary">Xuất Hóa Đơn</button>
                    <button type="button" class="btn btn-secondary" @onclick="Cancel">Hủy</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private HoaDon HoaDon = new HoaDon { NgayLap = DateTime.Today, ChiTietHoaDons = new List<ChiTietHoaDon>() };
    private List<SanPham> SanPhams;
    private List<KhachHang> KhachHangs; // Added KhachHangs
    private List<ChiTietHoaDon> ChiTietHoaDons = new List<ChiTietHoaDon>();
    private int SelectedSanPhamId;
    private int SoLuong;
    private string ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        SanPhams = await DbContext.SanPhams.ToListAsync();
        KhachHangs = await DbContext.KhachHangs.ToListAsync(); // Load KhachHangs
    }

    private void AddProduct()
    {
        if (SelectedSanPhamId == 0 || SoLuong <= 0)
        {
            ErrorMessage = "Vui lòng chọn sản phẩm và nhập số lượng hợp lệ.";
            return;
        }

        var sanPham = SanPhams?.FirstOrDefault(s => s.SanPhamId == SelectedSanPhamId);
        if (sanPham != null)
        {
            var existingDetail = ChiTietHoaDons.FirstOrDefault(c => c.SanPhamId == SelectedSanPhamId);
            if (existingDetail != null)
            {
                existingDetail.SoLuong += SoLuong;
            }
            else
            {
                var chiTiet = new ChiTietHoaDon
                    {
                        SanPham = sanPham,
                        SanPhamId = sanPham.SanPhamId,
                        SoLuong = SoLuong,
                        Gia = sanPham.GiaSanPham
                    };
                ChiTietHoaDons.Add(chiTiet);
            }
            // Reset selection and quantity
            SelectedSanPhamId = 0;
            SoLuong = 0;
            ErrorMessage = string.Empty;
        }
    }

    private async Task HandleValidSubmit()
    {
        if (ChiTietHoaDons == null || ChiTietHoaDons.Count == 0)
        {
            ErrorMessage = "Hóa đơn phải có ít nhất một sản phẩm.";
            return;
        }

        // Retrieve the user ID from AuthService
        var userId = AuthService.GetUserId();
        if (userId > 0)
        {
            HoaDon.NguoiDungId = userId;
            HoaDon.ChiTietHoaDons = ChiTietHoaDons;
            DbContext.HoaDons.Add(HoaDon);
            await DbContext.SaveChangesAsync();
            Navigation.NavigateTo("/hoa-don-list");
        }
        else
        {
            ErrorMessage = "Không thể lấy mã người dùng.";
        }
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/hoa-don-list");
    }
}

<style>
    h1 {
        margin-bottom: 30px;
    }

    .container {
        max-width: 800px;
    }

    .card {
        border-radius: 10px;
    }

    .card-body {
        padding: 30px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .btn-primary {
        border-radius: 5px;
    }

    .btn-secondary {
        border-radius: 5px;
    }

    .form-control {
        border-radius: 5px;
    }

    .text-danger {
        color: red;
        margin-top: 10px;
    }

    .table-bordered th,
    .table-bordered td {
        border: 1px solid black;
    }

    .thead-dark th {
        background-color: #343a40;
        color: white;
    }

    .d-flex {
        margin-top: 20px;
    }

    .alert {
        margin-top: 20px;
    }
</style>
