@page "/hoadonkh"
@inject ApplicationDbContext DbContext
@inject NavigationManager Navigation
@inject AuthService AuthService

<h1 class="text-center my-4">Hóa Đơn</h1>

<div class="container">
    <div class="card shadow-sm mb-3">
        <div class="card-body">
            <EditForm Model="@HoaDon" OnValidSubmit="HandleValidSubmit">
                <DataAnnotationsValidator />
                <ValidationSummary class="text-danger" />

                <div class="form-group">
                    <label for="khachHangId">Khách Hàng</label>
                    <InputSelect id="khachHangId" class="form-control" @bind-Value="HoaDon.KhachHangId" disabled>
                        @if (KhachHangs != null)
                        {
                            <option value="@KhachHangs.Max(k => k.KhachHangId)">
                                @KhachHangs.FirstOrDefault(k => k.KhachHangId == KhachHangs.Max(k => k.KhachHangId))?.TenKhachHang
                            </option>
                        }
                    </InputSelect>
                </div>
                <div class="form-group mt-3">
                    <label for="ngayLap">Ngày Lập</label>
                    <InputDate id="ngayLap" class="form-control" @bind-Value="HoaDon.NgayLap" disabled />
                </div>

                <h4 class="mt-5 text-center text-uppercase">Chi Tiết Sản Phẩm</h4>
                <table class="table table-striped table-bordered">
                    <thead class="thead-dark">
                        <tr>
                            <th>Tên Sản Phẩm</th>
                            <th>Số Lượng</th>
                            <th>Giá</th>
                            <th>Tổng</th>
                        </tr>
                    </thead>
                    <tbody>
                        @if (ChiTietHoaDons != null)
                        {
                            @foreach (var chiTiet in ChiTietHoaDons)
                            {
                                <tr>
                                    <td>@chiTiet.SanPham.TenSanPham</td>
                                    <td>@chiTiet.SoLuong</td>
                                    <td>@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", chiTiet.Gia)</td>
                                    <td>@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", chiTiet.SoLuong * chiTiet.Gia)</td>
                                </tr>
                            }
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td colspan="3" class="text-right"><strong>Tổng Cộng:</strong></td>
                            <td><strong>@string.Format(new System.Globalization.CultureInfo("vi-VN"), "{0:C0}", ChiTietHoaDons.Sum(c => c.SoLuong * c.Gia))</strong></td>
                        </tr>
                    </tfoot>
                </table>

                <div class="d-flex justify-content-between mt-4">
                    <button type="submit" class="btn btn-primary">Ok</button>
                    <button type="button" class="btn btn-secondary" @onclick="Cancel">Hủy</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

@code {
    private HoaDon HoaDon = new HoaDon { NgayLap = DateTime.Today, ChiTietHoaDons = new List<ChiTietHoaDon>() };
    private List<SanPham> SanPhams;
    private List<KhachHang> KhachHangs;
    private List<ChiTietHoaDon> ChiTietHoaDons = new List<ChiTietHoaDon>();
    private string ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        SanPhams = await DbContext.SanPhams.ToListAsync();
        KhachHangs = await DbContext.KhachHangs.ToListAsync();

        var largestKhachHang = KhachHangs.OrderByDescending(k => k.KhachHangId).FirstOrDefault();
        if (largestKhachHang != null)
        {
            HoaDon.KhachHangId = largestKhachHang.KhachHangId;
        }

        var cartItems = await DbContext.CartItems.ToListAsync();
        foreach (var item in cartItems)
        {
            var sanPham = SanPhams?.FirstOrDefault(s => s.SanPhamId == item.SanPhamId);
            if (sanPham != null)
            {
                ChiTietHoaDons.Add(new ChiTietHoaDon
                    {
                        SanPham = sanPham,
                        SanPhamId = sanPham.SanPhamId,
                        SoLuong = item.Quantity,
                        Gia = sanPham.GiaSanPham
                    });
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        if (ChiTietHoaDons == null || ChiTietHoaDons.Count == 0)
        {
            ErrorMessage = "Hóa đơn phải có ít nhất một sản phẩm.";
            return;
        }

        HoaDon.NguoiDungId = 21; // Mặc định UserId là 1
        HoaDon.ChiTietHoaDons = ChiTietHoaDons;
        DbContext.HoaDons.Add(HoaDon);

        // Cập nhật số lượng tồn kho trong cơ sở dữ liệu
        foreach (var chiTiet in ChiTietHoaDons)
        {
            var sanPham = await DbContext.SanPhams.FindAsync(chiTiet.SanPhamId);
            if (sanPham != null)
            {
                if (sanPham.TonKho < chiTiet.SoLuong)
                {
                    ErrorMessage = $"Số lượng sản phẩm {sanPham.TenSanPham} không đủ.";
                    return;
                }
                sanPham.TonKho -= chiTiet.SoLuong;
            }
        }

        var cartItems = await DbContext.CartItems.ToListAsync();
        DbContext.CartItems.RemoveRange(cartItems);

        await DbContext.SaveChangesAsync();
        Navigation.NavigateTo("/trangchumuahang");
    }

    private void Cancel()
    {
        Navigation.NavigateTo("/trangchumuahang");
    }
}


<style>
    h1 {
        margin-bottom: 30px;
    }

    .container {
        max-width: 800px;
    }

    .card {
        border-radius: 10px;
    }

    .card-body {
        padding: 30px;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .btn-primary {
        border-radius: 5px;
    }

    .btn-secondary {
        border-radius: 5px;
    }

    .form-control {
        border-radius: 5px;
    }

    .text-danger {
        color: red;
        margin-top: 10px;
    }

    .table-bordered th,
    .table-bordered td {
        border: 1px solid black;
    }

    .thead-dark th {
        background-color: #343a40;
        color: white;
    }

    .d-flex {
        margin-top: 20px;
    }

    .alert {
        margin-top: 20px;
    }
</style>
